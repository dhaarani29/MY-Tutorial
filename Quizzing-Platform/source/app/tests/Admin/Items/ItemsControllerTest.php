<?php

namespace QuizzingPlatform\Admin\Items;

//Use silex webtestcase which act as a browser

use QuizzingPlatform\Services\TestWebtestcase;
use Silex\Application;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-20 at 15:06:06.
 */
class ItemsControllerTest extends TestWebtestcase {

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::getItemTypes
     * @todo   Implement testGetItemTypes().
     */
    public function testGetItemTypes() {

        $client = $this->createClient();

        $url = $this->host . 'api/itemtypes';
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content

        if ($client->getResponse()->getStatusCode() == $this->app['cache']->fetch('HTTP_SUCCESS')) {
            $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
            $this->assertTrue($client->getResponse()->isSuccessful()); //Checking the response is successfull
            $this->assertContains('Multiple Choice', $client->getResponse()->getContent());
            $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json')); //Asserting the Content type
        } else {
            $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());             //Asserting the status Code
        }
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testGetRemediationLinkTypes
     * @todo   Implement testGetRemediationLinkTypes().
     */
    public function testGetRemediationLinkTypes() {

        $client = $this->createClient();

        $url = $this->host . 'api/remediationlinktypes';
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content

        if ($client->getResponse()->getStatusCode() == $this->app['cache']->fetch('HTTP_SUCCESS')) {
            $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
            $this->assertTrue($client->getResponse()->isSuccessful()); //Checking the response is successfull
            $this->assertContains('Ebook', $client->getResponse()->getContent());
            $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json')); //Asserting the Content type
        } else {
            $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());             //Asserting the status Code
        }
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testGetItemsList
     * @todo   Implement testGetItemsList().
     */
    public function testGetItemsList() {
        $client = $this->createClient();

        //Success scenario
        $userId = 1;
        $url = $this->host . 'api/items' . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertTrue($client->getResponse()->isSuccessful()); //Checking the response is successfull
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json')); //Asserting the Content type
        //Permission error
        $userId = 0;
        $url = $this->host . 'api/items' . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());

        //With filters
        $label = 'string';
        $identifier = 'IDENT_582c35131e318'; // IDENT_5851080741baf for Medical case
        $itemTypeId = 1;
        $status = 'Authoring';
        $perPage = 10;
        $sort = "%2Bid"; // +id sort
        $userId = 1;
        $page = 1;
        $parent = 0;  // 301 for Medical case

        $queryParam = '?label=' . $label . '&identifier=' . $identifier . '&itemTypeId=' . $itemTypeId . '&status=' . $status .
                '&page=' . $page . '&perPage=' . $perPage
                . '&sort=' . $sort . '&userId=' . $userId . '&parent=' . $parent;

        $url = $this->host . 'api/items' . $queryParam; //echo $url;die;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $response = $client->getResponse()->getContent();
        $res = get_object_vars(json_decode($response));
        $reqTotal = $res['total']; //echo $reqTotal;die; 

        if ($reqTotal > 0) {
            if ($label != '') {
                $this->assertContains('string', $response);
            }
            if ($identifier != '') {
                $this->assertContains('IDENT_5851080741baf', $response);
            }
            if ($itemTypeId != '') {
                $this->assertContains('1', $response);
            }
            if ($status != '') {
                $this->assertContains('1', $response);
            }
        }

        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Item list response "); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testGetItemById
     * @todo   Implement testGetItemById().
     */
    public function testGetItemById() {

        $client = $this->createClient();

        //Success scenario without version
        $userId = 1;
        $id = 696; //itemId
        $version = NULL;
        $url = $this->host . 'api/items/' . $id . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertTrue($client->getResponse()->isSuccessful()); //Checking the response is successfull
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json')); //Asserting the Content type
        $this->assertContains('2', $client->getResponse()->getContent());

        //Success scenario with version
        $userId = 1;
        $id = 696; //itemId
        $version = 5;
        $url = $this->host . 'api/items/' . $id . '?userId=' . $userId . '&version=' . $version;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertTrue($client->getResponse()->isSuccessful()); //Checking the response is successfull
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json')); //Asserting the Content type
        $this->assertContains('2', $client->getResponse()->getContent());

        //Permission Error
        $userId = 10;
        $id = 2;
        $url = $this->host . 'api/items/' . $id . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());

        //ID not exist
        $userId = 1;
        $id = 223423;
        $url = $this->host . 'api/items/' . $id . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('2005', $client->getResponse()->getContent());
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testDeleteItem
     * @todo   Implement testDeleteItem().
     */
    public function testDeleteItem() {

        $client = $this->createClient();

        //Delete single question based on the ID
        $userId = 1;
        $id = 535; //itemId
        $isDeleteAll = "false";
        $url = $this->host . 'api/items/' . $id . '?userId=' . $userId . '&isDeleteAll=' . $isDeleteAll;
        $client->request(
                'DELETE', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOCONTENT'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertEmpty($client->getResponse()->getContent());

        //Delete all versions of the question based on the Identifier passed.
        $isDeleteAll = "true";
        if ($isDeleteAll == "true") {

            //Question associated with metadata will not be able to delete
            $userId = 1;
            $id = 714; //itemId
            $url = $this->host . 'api/items/' . $id . '?userId=' . $userId . '&isDeleteAll=' . $isDeleteAll;
            $client->request(
                    'DELETE', //Method
                    $url, //Request URL
                    array(), //Parameters
                    array(), //Files
                    array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                    ''); //Raw content
            $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
            $this->assertContains('DELETED', $client->getResponse()->getContent());


            //Question associated with itembank/quiz, then inactive that question
            $userId = 1;
            $id = 537;
            $url = $this->host . 'api/items/' . $id . '?userId=' . $userId . '&isDeleteAll=' . $isDeleteAll;
            $client->request(
                    'DELETE', //Method
                    $url, //Request URL
                    array(), //Parameters
                    array(), //Files
                    array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                    ''); //Raw content
            $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        }

        //Permission Error
        $userId = 10;
        $id = 2;
        $isDeleteAll = false;
        $url = $this->host . 'api/items/' . $id . '?userId=' . $userId . '&isDeleteAll=' . $isDeleteAll;
        $client->request(
                'DELETE', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testCreateItem
     * @todo   Implement testCreateItem().
     */
    public function testCreateItem() {

        $client = $this->createClient();

        //Creating the item with asset
        $assetRequest = '{"file":"filename":"OpenSourceSystem.jpg"}';
        $url = $this->host . 'api/assettempupload';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $assetRequest);

        $assetResponse = $client->getResponse()->getContent();
        $res = json_decode($assetResponse, true);
        $assetName = $res['assetName'];
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Item Id as response."); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json
        $sampleInput = '{
          "userId": 1,
          "itemType": "1",
          "label": "string",
          "language": "en",
          "version": 1,
          "promptText": "Test data?",
          "assets": [
          {
          "assetId": 0,
          "assetName": "' . $assetName . '",
          "assetTypeId": 1,
          "fileName": "OpenSourceSystem.jpg",
          "altTitle": "OpenSourceSystem.jpg",
          "isPrivate": true
          }
          ],
          "score": 1,
          "modelFeedback": [
          {
          "outcomeType": 1,
          "feedbackText": "string",
          "showHide": true
          },
          {
          "outcomeType": 2,
          "feedbackText": "string",
          "showHide": true
          }
          ],
          "remediationLinks": [
          {
          "linkTypeId": 1,
          "linkText1": "string",
          "linkText2": "string",
          "linkText3": "string"
          },
          {
          "linkTypeId": 3,
          "linkText1": "string",
          "linkText2": "string",
          "linkText3": "string"
          }
          ],
          "timeDependant": true,
          "timeLimit": 0,
          "adaptive": true,
          "difficulty": 0,
          "status": "Authoring",
          "toolName": "test",
          "toolVersion": "testing",
          "choiceInteraction":
          {
          "shuffle": true,
          "maxChoice": 3,
          "minChoice": 1,
          "simpleChoices": [
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": "string",
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          },
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": "string",
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          },
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": "string",
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          },
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": "string",
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          },
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": "string",
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          }

          ]
          }
          ,
          "textEntryInteraction": [
          {
          "resourceIdentifier": "string",
          "stringIdentifier": "string",
          "expectedLength": 0,
          "patternMask": "string",
          "placeHolderText": "string",
          "format": "string"
          }
          ],
          "metadataAssoc": {
          "49":"Test  we HT",
          "392":"340",
          "366":[150,151]
          }


          }';
        $url = $this->host . 'api/items';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput);

        $this->assertEquals($this->app['cache']->fetch('HTTP_CREATED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue(is_numeric($client->getResponse()->getContent())); //Checking Reponse is numeric
        $this->assertNotNull($client->getResponse()->getContent(), "Item Id as response."); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json
        // Test creating Graphic question type.
        $assetRequest = '{"file":"","filename":"OpenSourceSystem.jpg"}';
        $url = $this->host . 'api/assettempupload';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $assetRequest);
        $assetResponse = $client->getResponse()->getContent();
        $res = json_decode($assetResponse, true);
        $assetName_1 = $res['assetName'];

        $assetRequest = '{"file":"filename":"OpenSourceSystem.jpg"}';
        $url = $this->host . 'api/assettempupload';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $assetRequest);
        $assetResponse = $client->getResponse()->getContent();
        $res = json_decode($assetResponse, true);
        $assetName_2 = $res['assetName'];


        $sampleInput = '
          {
          "userId": 1,
          "itemType": "23",
          "label": "string",
          "language": "en",
          "version": 1,
          "promptText": "Test data?",
          "score": 1,
          "modelFeedback": [
          {
          "outcomeType": 1,
          "feedbackText": "string",
          "showHide": true
          },
          {
          "outcomeType": 2,
          "feedbackText": "string",
          "showHide": true
          }
          ],
          "remediationLinks": [
          {
          "linkTypeId": 1,
          "linkText1": "string",
          "linkText2": "string",
          "linkText3": "string"
          },
          {
          "linkTypeId": 3,
          "linkText1": "string",
          "linkText2": "string",
          "linkText3": "string"
          }
          ],
          "timeDependant": true,
          "timeLimit": 0,
          "adaptive": true,
          "difficulty": 0,
          "status": "Authoring",
          "toolName": "test",
          "toolVersion": "testing",
          "choiceInteraction":
          {
          "shuffle": true,
          "maxChoice": 3,
          "minChoice": 1,
          "simpleChoices": [
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": {
          "assetId": 0,
          "assetName": "' . $assetName_1 . '",
          "assetTypeId": 1,
          "fileName": "OpenSourceSystem.jpg",
          "altTitle": "OpenSourceSystem.jpg",
          "isPrivate": true
          },
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          },
          {
          "resourceIdentifier": "string",
          "fixed": true,
          "label": "string",
          "value": {
          "assetId": 0,
          "assetName": "' . $assetName_2 . '",
          "assetTypeId": 1,
          "fileName": "OpenSourceSystem.jpg",
          "altTitle": "OpenSourceSystem.jpg",
          "isPrivate": true
          },
          "rationale" : "test",
          "placeHolderText": "string",
          "correct": true
          }
          ]
          }
          ,
          "textEntryInteraction": [
          {
          "resourceIdentifier": "string",
          "stringIdentifier": "string",
          "expectedLength": 0,
          "patternMask": "string",
          "placeHolderText": "string",
          "format": "string"
          }
          ],
          "metadataAssoc": {
          "49":"Test  we HT",
          "392":"340",
          "366":["150","151"]
          }


          }
          ';




        //Asset request is empty
        $assetRequest = '';
        $url = $this->host . 'api/assettempupload';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $assetRequest);
        $assetResponse = $client->getResponse()->getContent();
        $res = json_decode($assetResponse, true);
        $assetName = $res['assetName'];
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertContains('2008', $client->getResponse()->getContent());

        //Permission Error
        $sampleInput = '{
          "itemType": 1,
          "metadataAssoc": {
          "46": "Question 2",
          "379": [
          "152",
          "153",
          "154"
          ],
          "380": "Question 2",
          "381": "Question 2"
          },
          "choiceInteraction": {
          "simpleChoices": [
          {
          "correct": true,
          "label": "Question 2",
          "rationale": "Question 2"
          },
          {
          "correct": false,
          "label": "Question 2--",
          "rationale": "Question 2--"
          }
          ]
          },
          "modelFeedback": [
          {
          "outcomeType": 1,
          "feedbackText": "Question 2"
          },
          {
          "outcomeType": 2,
          "feedbackText": "Question 2"
          }
          ],
          "version": 1,
          "status": "Authoring",
          "difficulty": 1,
          "score": 1,
          "remediationLinks": [
          {
          "linkTypeId": 1,
          "linkText1": "Question 2",
          "linkText2": "Question 2",
          "linkText3": "Question 2"
          }
          ],
          "label": "Question 2",
          "promptText": "Question 2",
          "userId": 10
          }';
        $url = $this->host . 'api/items';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput);
        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());

        //Creating a item without assets
        $sampleInput = '{
          "itemType": 1,
          "metadataAssoc": {
          "46": "Question 4",
          "379": [
          "152",
          "153",
          "154"
          ],
          "380": "Question 4",
          "381": "Question 4"
          },
          "choiceInteraction": {
          "simpleChoices": [
          {
          "correct": true,
          "label": "Question 4",
          "rationale": "Question 4"
          },
          {
          "correct": false,
          "label": "Question 4--",
          "rationale": "Question 4--"
          }
          ]
          },
          "modelFeedback": [
          {
          "outcomeType": 1,
          "feedbackText": "Question 4"
          },
          {
          "outcomeType": 2,
          "feedbackText": "Question 4"
          }
          ],
          "version": 1,
          "status": "Authoring",
          "difficulty": 1,
          "score": 1,
          "remediationLinks": [
          {
          "linkTypeId": 1,
          "linkText1": "Question 4",
          "linkText2": "Question 4",
          "linkText3": "Question 4"
          }
          ],
          "label": "Question 4",
          "promptText": "Question 4",
          "userId": 1
          }';
        $url = $this->host . 'api/items';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput);
        $this->assertEquals($this->app['cache']->fetch('HTTP_CREATED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue(is_numeric($client->getResponse()->getContent())); //Checking Reponse is numeric
        $this->assertNotNull($client->getResponse()->getContent(), "Item Id as response."); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json
        // Test creating Medical Case question
        $assetRequest = '{"file":"filename":"OpenSourceSystem.jpg"}';
        $url = $this->host . 'api/assettempupload';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $assetRequest);
        $assetResponse = $client->getResponse()->getContent();
        $res = json_decode($assetResponse, true);
        $assetName = $res['assetName'];

        //Clinical Symptoms input
        $sampleInput = '{ 
                              "userId": 1,
                              "itemType": "21",
                              "label": "string",
                              "language": "en",
                              "version": 1,
                              "promptText": "Test data?",
                              "parent" : 0,
                              "status": "Authoring",
                              "assets": [
                                {
                                  "assetId": 0,
                                  "assetName":  "' . $assetName . '",
                                  "assetTypeId": 1,
                                  "fileName": "OpenSourceSystem.jpg",
                                  "altTitle": "OpenSourceSystem.jpg",
                                  "isPrivate": true
                                }
                              ],
                                "metadataAssoc": {
                                     "49":"Test  we HT",
                                     "392":"340",
                                      "366":["150","151"]
                                    }
            }';

        $url = $this->host . 'api/items';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput);
        $this->assertEquals($this->app['cache']->fetch('HTTP_CREATED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue(is_numeric($client->getResponse()->getContent())); //Checking Reponse is numeric
        $this->assertNotNull($client->getResponse()->getContent(), "Item Id as response."); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json

        $newParentId = $client->getResponse()->getContent();

        $sampleInput = '
                                {
                                  "userId": 1,
                                  "itemType": "1",
                                  "label": "string",
                                  "language": "en",
                                  "version": 1,
                                  "promptText": "Test data updating?",
                                  "parent" : "' . $newParentId . '",
                                  "score": 1,
                                  "modelFeedback": [
                                    {
                                      "outcomeType": 1,
                                      "feedbackText": "string",
                                      "showHide": true
                                    },
                                    {
                                      "outcomeType": 2,
                                      "feedbackText": "string",
                                      "showHide": true
                                    }
                                  ],
                                  "remediationLinks": [
                                    {
                                      "linkTypeId": 1,
                                      "linkText1": "string",
                                      "linkText2": "string",
                                      "linkText3": "string"
                                    },
                                    {
                                      "linkTypeId": 3,
                                      "linkText1": "string",
                                      "linkText2": "string",
                                      "linkText3": "string"
                                    }
                                  ],
                                  "timeDependant": true,
                                  "timeLimit": 0,
                                  "adaptive": true,
                                  "difficulty": 0,
                                  "status": "Authoring",
                                  "toolName": "test",
                                  "toolVersion": "testing",
                                  "choiceInteraction": 
                                    {
                                      "shuffle": true,
                                      "maxChoice": 3,
                                      "minChoice": 1,
                                      "simpleChoices": [
                                        {
                                          "resourceIdentifier": "string",
                                          "fixed": true,
                                          "label": "string",
                                          "value": "string",
                                          "rationale" : "test",
                                          "placeHolderText": "string",
                                          "correct": true
                                        },
                                        {
                                          "resourceIdentifier": "string",
                                          "fixed": true,
                                          "label": "string",
                                          "value": "string",
                                          "rationale" : "test",
                                          "placeHolderText": "string",
                                          "correct": true
                                        },
                                        {
                                          "resourceIdentifier": "string",
                                          "fixed": true,
                                          "label": "string",
                                          "value": "string",
                                          "rationale" : "test",
                                          "placeHolderText": "string",
                                          "correct": true
                                        },
                                        {
                                          "resourceIdentifier": "string",
                                          "fixed": true,
                                          "label": "string",
                                          "value": "string",
                                          "rationale" : "test",
                                          "placeHolderText": "string",
                                          "correct": true
                                        },
                                        {
                                          "resourceIdentifier": "string",
                                          "fixed": true,
                                          "label": "string",
                                          "value": "string",
                                          "rationale" : "test",
                                          "placeHolderText": "string",
                                          "correct": true
                                        }

                                      ]
                                    }
                                  ,
                                  "textEntryInteraction": [
                                    {
                                      "resourceIdentifier": "string",
                                      "stringIdentifier": "string",
                                      "expectedLength": 0,
                                      "patternMask": "string",
                                      "placeHolderText": "string",
                                      "format": "string"
                                    }
                                  ]


                                }';

        $url = $this->host . 'api/items';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput);
        $this->assertEquals($this->app['cache']->fetch('HTTP_CREATED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue(is_numeric($client->getResponse()->getContent())); //Checking Reponse is numeric
        $this->assertNotNull($client->getResponse()->getContent(), "Item Id as response."); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json
        //Create Request is empty
        $sampleInput = '';
        $url = $this->host . 'api/items';
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput);
        $this->assertEquals($this->app['cache']->fetch('HTTP_BADREQUEST'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('2004', $client->getResponse()->getContent());
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testUpdateItem
     * @todo   Implement testUpdateItem().
     */
    public function testUpdateItem() {
        $client = $this->createClient();

        //Permission Error
        $id = 161;
        $sampleInput = '{
                        "itemType": 1,
                        "itemTypeName": "Multiple Choice",
                        "status": "Authoring",
                        "identifier": "IDENT_582c328fb21ad",
                        "version": 1,
                        "label": "Question 3",
                        "promptText": "Question 3",
                        "language": "en-US",
                        "timeDependant": true,
                        "timeLimit": null,
                        "adaptive": false,
                        "score": 1,
                        "difficulty": 1,
                        "toolName": "",
                        "toolVersion": "",
                        "isDeleted": 1,
                        "versionsList": [
                          {
                            "id": 28,
                            "version": 1
                          }
                        ],
                        "modelFeedback": [
                          {
                            "outcomeType": 1,
                            "feedbackText": "Question 3",
                            "showHide": null
                          },
                          {
                            "outcomeType": 2,
                            "feedbackText": "Question 3",
                            "showHide": null
                          }
                        ],
                        "remediationLinks": [
                          {
                            "linkTypeId": 1,
                            "linkTypeName": "Web Link",
                            "linkText1": "Question 3",
                            "linkText2": "Question 3",
                            "linkText3": "Question 3"
                          }
                        ],
                        "choiceInteraction": {
                          "shuffle": null,
                          "maxChoice": null,
                          "minChoice": null,
                          "simpleChoices": [
                            {
                              "resourceIdentifier": null,
                              "fixed": null,
                              "label": "Question 3",
                              "value": null,
                              "rationale": "Question 3",
                              "correct": true
                            },
                            {
                              "resourceIdentifier": null,
                              "fixed": null,
                              "label": "Question 3--",
                              "value": null,
                              "rationale": "Question 3--",
                              "correct": false
                            }
                          ]
                        },
                        "metadataAssoc": [
                          "Question 3",
                          [
                            "152",
                            "153",
                            "154"
                          ],
                          "Question 3",
                          "Question3"
                        ],
                        "userId": 10000
                      }';

        $url = $this->host . 'api/items/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput); //Raw content 

        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());

        //Item is not exist for update
        $id = 3;
        $sampleInput = '{
                        "id": 3,
                        "itemType": 1,
                        "itemTypeName": "Multiple Choice",
                        "status": "Authoring",
                        "identifier": "IDENT_5829814bcb9eb",
                        "version": 1,
                        "label": "Question 3",
                        "promptText": "Question 3",
                        "language": "en-US",
                        "timeDependant": true,
                        "timeLimit": null,
                        "adaptive": false,
                        "score": 1,
                        "difficulty": 1,
                        "toolName": "",
                        "toolVersion": "",
                        "isDeleted": 1,
                        "versionsList": [
                          {
                            "id": 28,
                            "version": 1
                          }
                        ],
                        "modelFeedback": [
                          {
                            "outcomeType": 1,
                            "feedbackText": "Question 3",
                            "showHide": null
                          },
                          {
                            "outcomeType": 2,
                            "feedbackText": "Question 3",
                            "showHide": null
                          }
                        ],
                        "remediationLinks": [
                          {
                            "linkTypeId": 1,
                            "linkTypeName": "Web Link",
                            "linkText1": "Question 3",
                            "linkText2": "Question 3",
                            "linkText3": "Question 3"
                          }
                        ],
                        "choiceInteraction": {
                          "shuffle": null,
                          "maxChoice": null,
                          "minChoice": null,
                          "simpleChoices": [
                            {
                              "resourceIdentifier": null,
                              "fixed": null,
                              "label": "Question 3",
                              "value": null,
                              "rationale": "Question 3",
                              "correct": true
                            },
                            {
                              "resourceIdentifier": null,
                              "fixed": null,
                              "label": "Question 3--",
                              "value": null,
                              "rationale": "Question 3--",
                              "correct": false
                            }
                          ]
                        },
                        "metadataAssoc": [
                          "Question 3",
                          [
                            "152",
                            "153",
                            "154"
                          ],
                          "Question 3",
                          "Question3"
                        ],
                        "userId": "1"
                      }';
        $url = $this->host . 'api/items/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput); //Raw content 

        $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('2005', $client->getResponse()->getContent());

        //success scenario
        $id = 696;
        $sampleInput = '{
                        "itemType": 1,
                        "itemTypeName": "Multiple Choice",
                        "status": "Authoring",
                        "identifier": "IDENT_582c328fb21ad",
                        "version": 1,
                        "label": "Question 3",
                        "promptText": "Question 3",
                        "language": "en-US",
                        "timeDependant": true,
                        "timeLimit": null,
                        "adaptive": false,
                        "score": 1,
                        "difficulty": 1,
                        "toolName": "",
                        "toolVersion": "",
                        "isDeleted": 1,
                        "versionsList": [
                          {
                            "id": 28,
                            "version": 1
                          }
                        ],
                        "modelFeedback": [
                          {
                            "outcomeType": 1,
                            "feedbackText": "Question 3",
                            "showHide": null
                          },
                          {
                            "outcomeType": 2,
                            "feedbackText": "Question 3",
                            "showHide": null
                          }
                        ],
                        "remediationLinks": [
                          {
                            "linkTypeId": 1,
                            "linkTypeName": "Web Link",
                            "linkText1": "Question 3",
                            "linkText2": "Question 3",
                            "linkText3": "Question 3"
                          }
                        ],
                        "choiceInteraction": {
                          "shuffle": null,
                          "maxChoice": null,
                          "minChoice": null,
                          "simpleChoices": [
                            {
                              "resourceIdentifier": null,
                              "fixed": null,
                              "label": "Question 3",
                              "value": null,
                              "rationale": "Question 3",
                              "correct": true
                            },
                            {
                              "resourceIdentifier": null,
                              "fixed": null,
                              "label": "Question 3--",
                              "value": null,
                              "rationale": "Question 3--",
                              "correct": false
                            }
                          ]
                        },
                        "metadataAssoc": [
                          "Question 3",
                          [
                            "152",
                            "153",
                            "154"
                          ],
                          "Question 3",
                          "Question3"
                        ],
                        "userId": 1
                      }';
        $url = $this->host . 'api/items/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleInput); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOCONTENT'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Response is true"); //Response content not null
        $this->assertTrue($client->getResponse()->isSuccessful());
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testPublishItem
     * @todo   Implement testPublishItem().
     */
    public function testPublishItem() {
        $client = $this->createClient();

        //Permission Error
        $id = 696; //itemId 
        $userId = 10;
        $url = $this->host . 'api/publishitem/' . $id . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content

        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());

        //Item not exist for publish
        $id = 5; //itemId
        $userId = 1;
        $url = $this->host . 'api/publishitem/' . $id . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('2005', $client->getResponse()->getContent());

        //success scenario
        $id = 696; //itemId 
        $userId = 1;
        $url = $this->host . 'api/publishitem/' . $id . '?userId=' . $userId;
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('true', $client->getResponse()->getContent());
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testAssetTypes
     * @todo   Implement testAssetTypes().
     */
    public function testAssetTypes() {

        $client = $this->createClient();

        $url = $this->host . 'api/assettypes';
        $client->request(
                'GET', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                ''); //Raw content

        if ($client->getResponse()->getStatusCode() == $this->app['cache']->fetch('HTTP_SUCCESS')) {
            $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode());  //Asserting the status Code
            $this->assertTrue($client->getResponse()->isSuccessful()); //Checking the response is successfull
            $this->assertContains('Image', $client->getResponse()->getContent());
            $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json')); //Asserting the Content type
        } else {
            $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode());             //Asserting the status Code
            $this->assertContains('1001', $this->getResponse()->getContent());
        }
    }

    /**
     * @covers QuizzingPlatform\Admin\Items\ItemsController::testAssociateItem
     * @todo   Implement testAssociateItem().
     */
    public function testAssociateItem() {

        $client = $this->createClient();

        //Invalid Request
        $sampleData = '{
                        "user121Id":"1",
                        "itemBankId":"1"
                        }';
        $id = 696; //itemId
        $url = $this->host . 'api/associateitem/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleData); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_BADREQUEST'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertContains('2006', $client->getResponse()->getContent());

        //Success Scenario(associate)
        $sampleData = '{
                        "associate":1,
                        "userId":"1",
                        "itemBankId":"3"
                        }';
        $id = 696; //itemId
        $url = $this->host . 'api/associateitem/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleData); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOCONTENT'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Response is true"); //Response content not null
        //Success Scenario(dissociation)
        $sampleData = '{
                        "associate":0,
                        "userId":"1",
                        "itemBankId":"5"
                        }';
        $id = 696; //itemId
        $url = $this->host . 'api/associateitem/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleData); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOCONTENT'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Response is true"); //Response content not null
        //Permission error
        $sampleData = '{
                        "userId":"10",
                        "itemBankId":"1"
                        }';
        $id = 1; //itemId
        $url = $this->host . 'api/associateitem/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleData); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_FORBIDDEN'), $client->getResponse()->getStatusCode());  //Asserting the status Code
        $this->assertContains('5500', $client->getResponse()->getContent());

        //Associate inactive,item not exist and deleted item
        $sampleData = '{
                        "userId":"1",
                        "itemBankId":"1"
                        }';
        $id = 82; //itemId
        $url = $this->host . 'api/associateitem/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleData); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Response is true"); //Response content not null
        $this->assertContains('2005', $client->getResponse()->getContent());

        //Duplicate Association
        $sampleData = '{
                        "associate":1,
                        "userId":"1",
                        "itemBankId":"1"
                        }';
        $id = 83; //itemId
        $url = $this->host . 'api/associateitem/' . $id;
        $client->request(
                'PUT', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json', 'HTTP_AUTHORIZATION' => $this->adminAccessToken, 'HTTP_REQUESTFROM' => $this->requestFrom), //Header
                $sampleData); //Raw content 
        $this->assertEquals($this->app['cache']->fetch('HTTP_DUPLICATE'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertNotNull($client->getResponse()->getContent(), "Response is true"); //Response content not null
        $this->assertContains('2007', $client->getResponse()->getContent());
    }

}
