<?php

namespace QuizzingPlatform\Admin\Login;

//Use silex webtestcase which act as a browser

use QuizzingPlatform\Services\TestWebtestcase;
use Silex\Application;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-20 at 15:06:06.
 */
class LoginControllerTest extends TestWebtestcase {
    /*
     * @covers QuizzingPlatform\Admin\Login\LoginController::testlogin
     * @todo   Implement testlogin().
     */

    public function testLogin() {

        $client = $this->createClient();

        //Success Scenario
        //Json input for sample User details
        $sampleJson = '{
                            "userName":"shreelakshmi.u@impelsys.com",
                            "password":"Shree@123"
                        }';

        $url = $this->host . 'api/login';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario
        //Json input for sample User details
        $sampleJson = '{
                            "userName":"skldjsadj@impelsys.com",
                            "password":"test"
                        }';

        $url = $this->host . 'api/login';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_UNAUTHORIZED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
    }

    /*
     * @covers QuizzingPlatform\Admin\Login\LoginController::testauthenticate
     * @todo   Implement testauthenticate().
     */

    public function testAuthenticate() {

        $client = $this->createClient();

        //Success Scenario
        //Json input for sample User details
        $sampleJson = '{
                            "clientCode" : "silverchair001" ,
                            "secretKey" : "silverchair_code" ,
                            "email" : "testinguser@gmail.com",
                            "firstName" : "F Demo",
                            "lastName" : "L demo",
                            "clientUserId" : "100"
                        }';

        $url = $this->host . 'api/authenticate';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario : If we dont pass any of the requited cleint information
        $sampleJson = '{
                            "secretKey" : "silverchair_code" ,
                            "email" : "testinguser@gmail.com",
                            "firstName" : "F Demo",
                            "lastName" : "L demo",
                            "clientUserId" : "100"
                        }';

        $url = $this->host . 'api/authenticate';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_UNAUTHORIZED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario : If we pass invalid client credential. 
        $sampleJson = '{
                            "clientCode" : "silverchair001qwyeqw" ,
                            "secretKey" : "scsecretcodewhekqe" ,
                            "email" : "testinguser@gmail.com",
                            "firstName" : "F Demo",
                            "lastName" : "L demo",
                            "clientUserId" : "100"
                        }';

        $url = $this->host . 'api/authenticate';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_UNAUTHORIZED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario : If access token expires
        $sampleJson = '{
                            "clientCode" : "silverchair001qwyeqw" ,
                            "secretKey" : "scsecretcodewhekqe" ,
                            "email" : "testinguser@gmail.com",
                            "firstName" : "F Demo",
                            "lastName" : "L demo",
                            "clientUserId" : "100"
                        }';

        $url = $this->host . 'api/authenticate';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_UNAUTHORIZED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
    }

    /*
     * @covers QuizzingPlatform\Admin\Login\LoginController::testforgotPassword
     * @todo   Implement testforgotPassword().
     */

    public function testForgotPassword() {

        $client = $this->createClient();

        //Success Scenario for reset password
        //Json input for sample User details
        $sampleJson = '{
                            "emailAddress":"shreelakshmi.u@impelsys.com",
                            "action":"resetpassword"
                        }';

        $url = $this->host . 'api/forgotpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario for reset password
        $sampleJson = '{
                            "userName":"skldjsadj@impelsys.com",
                            "password":"test"
                        }';

        $url = $this->host . 'api/forgotpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_BADREQUEST'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Success Scenario for send username
        $sampleJson = '{
                            "emailAddress":"shreelakshmi.u@impelsys.com",
                            "action":"sendusername"
                        }';

        $url = $this->host . 'api/forgotpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario for send username
        $sampleJson = '{
                            "emailAddress":"skldjsadj@impelsys.com",
                            action":"sendsdfusername"
                        }';

        $url = $this->host . 'api/forgotpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_BADREQUEST'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
    }

    /*
     * @covers QuizzingPlatform\Admin\Login\LoginController::validateResetPassword
     * @todo   Implement validateResetPassword().
     */

    public function testValidateResetPassword() {

        $client = $this->createClient();

        //Success Scenario for reset password
        //Json input for sample User details
        $sampleJson = '{
                            "resetToken":"zba4SJXzVxhE5zsLiq0Q3ku1ZgoNQ87R"
                        }';

        $url = $this->host . 'api/validateresetpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario for reset password
        $sampleJson = '{
                            "resetToken":"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzdsfsdfI1NiJ9.eyJuYW1lIjoic2hyZWVsYWtzaG1pLnVAaW1wZWxzeXMuY29tIiwiZXhwIjoxNDgyODIyOTg3fQ.5MlNcizXWFxkY8kDW_qZlwwugpTyIP6hHzOFYXFXZKI"
                        }';

        $url = $this->host . 'api/validateresetpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_UNAUTHORIZED'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
    }

    /*
     * @covers QuizzingPlatform\Admin\Login\LoginController::resetPassword
     * @todo   Implement resetPassword().
     */

    public function testResetPassword() {

        $client = $this->createClient();

        //Success Scenario for reset password
        //Json input for sample User details
        $sampleJson = '{
                            "resetToken":"LZWc1uNZ03VOqB1dhx4MjKBkvBNdjgn1",
                            "password" : "Shree@1234"
                        }';

        $url = $this->host . 'api/resetpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_SUCCESS'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->isSuccessful());
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
        //Failure Scenario for reset password
        $sampleJson = '{
                            "resetToken":"LZWc1uNZ03VOqB1dhx4MxzczcjKBkvBNdjgn1",
                            "password" : "test"
                        }';


        $url = $this->host . 'api/resetpassword';

        //Request the Url with Post method and posting sample json content
        $client->request(
                'POST', //Method
                $url, //Request URL
                array(), //Parameters
                array(), //Files
                array('CONTENT_TYPE' => 'application/json'), //Header
                $sampleJson); //Raw content
        $this->assertEquals($this->app['cache']->fetch('HTTP_NOTFOUND'), $client->getResponse()->getStatusCode()); //checking the statusCode
        $this->assertTrue($client->getResponse()->headers->contains('Content-Type', 'application/json'), "Content type should be Application/json"); //Content type is json 
    }

}
